<link href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css' rel='stylesheet'/>
<link href="https://fonts.googleapis.com/css2?family=Noto+Sans+Bengali:wght@400;500;600;700&family=Roboto:wght@300;400;500;700&display=swap" rel="stylesheet" />

<style>
  :root {
    --chat-primary: #4f46e5;
    --chat-primary-hover: #4338ca;
    --chat-secondary: #f8fafc;
    --chat-text: #1e293b;
    --chat-light-text: #64748b;
    --chat-border: #e2e8f0;
    --chat-user-bubble: #e0e7ff;
    --chat-bot-bubble: #f1f5f9;
    --chat-error: #ef4444;
    --chat-success: #10b981;
    --chat-warning: #f59e0b;
    --chat-dark-bg: #1e293b;
    --chat-dark-text: #f8fafc;
    --chat-dark-border: #334155;
  }
  
  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Roboto', 'Noto Sans Bengali', sans-serif;
  }
  
  #chat-container {
    position: fixed;
    bottom: 20px;
    right: 20px;
    width: 380px;
    max-height: 80vh;
    background-color: white;
    border-radius: 16px;
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
    display: none;
    flex-direction: column;
    z-index: 9999;
    overflow: hidden;
    transition: all 0.3s ease;
    border: 1px solid var(--chat-border);
  }
  
  .dark-mode #chat-container {
    background-color: var(--chat-dark-bg);
    border-color: var(--chat-dark-border);
  }
  
  #chat-header {
    background-color: var(--chat-primary);
    color: white;
    padding: 16px 20px;
    font-size: 16px;
    font-weight: 600;
    display: flex;
    align-items: center;
    justify-content: space-between;
    cursor: pointer;
    border-radius: 16px 16px 0 0;
  }
  
  .chat-header-info {
    display: flex;
    align-items: center;
    gap: 12px;
  }
  
  .chat-status {
    display: flex;
    align-items: center;
    font-size: 12px;
    font-weight: 400;
  }
  
  .status-dot {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background-color: #22c55e;
    margin-right: 6px;
    animation: pulse 1.5s infinite;
  }
  
  @keyframes pulse {
    0% { opacity: 1; }
    50% { opacity: 0.5; }
    100% { opacity: 1; }
  }
  
  #chat-close {
    background: none;
    border: none;
    color: white;
    font-size: 18px;
    cursor: pointer;
    opacity: 0.8;
    transition: all 0.2s;
    width: 32px;
    height: 32px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
  }
  
  #chat-close:hover {
    opacity: 1;
    background-color: rgba(255, 255, 255, 0.1);
  }
  
  #chat-body {
    flex: 1;
    padding: 16px;
    overflow-y: auto;
    background-color: var(--chat-secondary);
    display: flex;
    flex-direction: column;
    gap: 12px;
    scrollbar-width: thin;
    scrollbar-color: var(--chat-primary) var(--chat-secondary);
  }
  
  .dark-mode #chat-body {
    background-color: #1a2533;
    color: var(--chat-dark-text);
  }
  
  #chat-body::-webkit-scrollbar {
    width: 6px;
  }
  
  #chat-body::-webkit-scrollbar-track {
    background: var(--chat-secondary);
  }
  
  #chat-body::-webkit-scrollbar-thumb {
    background-color: var(--chat-primary);
    border-radius: 3px;
  }
  
  .dark-mode #chat-body::-webkit-scrollbar-track {
    background: #1a2533;
  }
  
  .chat-message {
    max-width: 85%;
    padding: 12px 16px;
    border-radius: 18px;
    font-size: 14px;
    line-height: 1.5;
    position: relative;
    animation: fadeIn 0.3s ease;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
  }
  
  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
  }
  
  .user-message {
    background-color: var(--chat-primary);
    color: white;
    align-self: flex-end;
    border-bottom-right-radius: 4px;
  }
  
  .dark-mode .user-message {
    background-color: var(--chat-primary);
  }
  
  .bot-message {
    background-color: var(--chat-bot-bubble);
    color: var(--chat-text);
    align-self: flex-start;
    border-bottom-left-radius: 4px;
  }
  
  .dark-mode .bot-message {
    background-color: #2d3748;
    color: var(--chat-dark-text);
  }
  
  .system-message {
    background-color: var(--chat-secondary);
    color: var(--chat-light-text);
    align-self: center;
    text-align: center;
    font-size: 12px;
    padding: 8px 16px;
    border-radius: 12px;
    margin: 8px 0;
  }
  
  .dark-mode .system-message {
    background-color: #2d3748;
    color: #a0aec0;
  }
  
  .message-time {
    font-size: 10px;
    color: rgba(255, 255, 255, 0.7);
    margin-top: 6px;
    text-align: right;
    display: block;
  }
  
  .bot-message .message-time {
    color: var(--chat-light-text);
    text-align: left;
  }
  
  .dark-mode .bot-message .message-time {
    color: #a0aec0;
  }
  
  #chat-footer {
    padding: 16px;
    background-color: white;
    border-top: 1px solid var(--chat-border);
    display: none;
    flex-direction: column;
  }
  
  .dark-mode #chat-footer {
    background-color: var(--chat-dark-bg);
    border-color: var(--chat-dark-border);
  }
  
  .chat-input-container {
    display: flex;
    gap: 10px;
    align-items: center;
  }
  
  .voice-input-container {
    position: relative;
    flex: 1;
  }
  
  #chat-input {
    flex: 1;
    padding: 12px 16px;
    border: 1px solid var(--chat-border);
    border-radius: 24px;
    font-size: 14px;
    outline: none;
    transition: all 0.2s;
    width: 100%;
    background-color: white;
  }
  
  .dark-mode #chat-input {
    background-color: #2d3748;
    border-color: var(--chat-dark-border);
    color: var(--chat-dark-text);
  }
  
  #chat-input:focus {
    border-color: var(--chat-primary);
    box-shadow: 0 0 0 2px rgba(79, 70, 229, 0.2);
  }
  
  #voice-input-btn {
    position: absolute;
    right: 12px;
    top: 50%;
    transform: translateY(-50%);
    background: none;
    border: none;
    color: var(--chat-light-text);
    cursor: pointer;
    transition: all 0.2s;
    width: 24px;
    height: 24px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
  }
  
  #voice-input-btn:hover {
    color: var(--chat-primary);
    background-color: rgba(79, 70, 229, 0.1);
  }
  
  .dark-mode #voice-input-btn {
    color: #a0aec0;
  }
  
  #voice-input-btn.listening {
    color: white;
    background-color: var(--chat-error);
    animation: pulse 1.5s infinite;
  }
  
  #chat-send {
    background-color: var(--chat-primary);
    color: white;
    border: none;
    width: 44px;
    height: 44px;
    border-radius: 50%;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.2s;
    flex-shrink: 0;
  }
  
  #chat-send:hover {
    background-color: var(--chat-primary-hover);
    transform: scale(1.05);
  }
  
  #chat-send:disabled {
    background-color: var(--chat-light-text);
    cursor: not-allowed;
    transform: none;
  }
  
  .chat-actions {
    display: flex;
    justify-content: space-between;
    margin-top: 12px;
  }
  
  .chat-action-btn {
    background: none;
    border: none;
    color: var(--chat-light-text);
    font-size: 13px;
    cursor: pointer;
    display: flex;
    align-items: center;
    gap: 6px;
    transition: all 0.2s;
    padding: 6px 10px;
    border-radius: 8px;
  }
  
  .chat-action-btn:hover {
    color: var(--chat-primary);
    background-color: rgba(79, 70, 229, 0.1);
  }
  
  .dark-mode .chat-action-btn {
    color: #a0aec0;
  }
  
  .dark-mode .chat-action-btn:hover {
    background-color: rgba(124, 58, 237, 0.1);
  }
  
  .chat-credits {
    font-size: 11px;
    color: var(--chat-light-text);
    text-align: center;
    margin-top: 12px;
  }
  
  .dark-mode .chat-credits {
    color: #a0aec0;
  }
  
  .chat-credits a {
    color: var(--chat-primary);
    text-decoration: none;
    font-weight: 500;
  }
  
  #user-info-form {
    padding: 20px;
    background-color: white;
    display: flex;
    flex-direction: column;
    gap: 16px;
  }
  
  .dark-mode #user-info-form {
    background-color: var(--chat-dark-bg);
  }
  
  .form-title {
    font-size: 16px;
    font-weight: 600;
    color: var(--chat-text);
    text-align: center;
    margin-bottom: 4px;
  }
  
  .dark-mode .form-title {
    color: var(--chat-dark-text);
  }
  
  .form-group {
    display: flex;
    flex-direction: column;
    gap: 6px;
  }
  
  .form-label {
    font-size: 13px;
    color: var(--chat-light-text);
    font-weight: 500;
  }
  
  .dark-mode .form-label {
    color: #a0aec0;
  }
  
  .form-input {
    padding: 12px 16px;
    border: 1px solid var(--chat-border);
    border-radius: 8px;
    font-size: 14px;
    outline: none;
    transition: all 0.2s;
    background-color: white;
  }
  
  .dark-mode .form-input {
    background-color: #2d3748;
    border-color: var(--chat-dark-border);
    color: var(--chat-dark-text);
  }
  
  .form-input:focus {
    border-color: var(--chat-primary);
    box-shadow: 0 0 0 2px rgba(79, 70, 229, 0.2);
  }
  
  .form-buttons {
    display: flex;
    gap: 12px;
    margin-top: 8px;
  }
  
  .form-btn {
    flex: 1;
    padding: 12px;
    border: none;
    border-radius: 8px;
    font-size: 14px;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s;
  }
  
  .btn-primary {
    background-color: var(--chat-primary);
    color: white;
  }
  
  .btn-primary:hover {
    background-color: var(--chat-primary-hover);
  }
  
  .btn-secondary {
    background-color: var(--chat-secondary);
    color: var(--chat-text);
    border: 1px solid var(--chat-border);
  }
  
  .btn-secondary:hover {
    background-color: #e2e8f0;
  }
  
  .dark-mode .btn-secondary {
    background-color: #2d3748;
    color: var(--chat-dark-text);
    border-color: var(--chat-dark-border);
  }
  
  .dark-mode .btn-secondary:hover {
    background-color: #374151;
  }
  
  .welcome-message {
    background-color: var(--chat-bot-bubble);
    padding: 16px;
    border-radius: 12px;
    font-size: 14px;
    line-height: 1.5;
    color: var(--chat-text);
    margin-bottom: 16px;
  }
  
  .dark-mode .welcome-message {
    background-color: #2d3748;
    color: var(--chat-dark-text);
  }
  
  #chat-toggle-btn {
    position: fixed;
    bottom: 24px;
    right: 24px;
    background-color: var(--chat-primary);
    color: white;
    border: none;
    width: 60px;
    height: 60px;
    border-radius: 50%;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 0 6px 16px rgba(79, 70, 229, 0.3);
    z-index: 10000;
    transition: all 0.3s ease;
  }
  
  #chat-toggle-btn:hover {
    background-color: var(--chat-primary-hover);
    transform: scale(1.05);
    box-shadow: 0 8px 20px rgba(79, 70, 229, 0.4);
  }
  
  #chat-toggle-btn i {
    font-size: 24px;
  }
  
  .notification-badge {
    position: absolute;
    top: -6px;
    right: -6px;
    background-color: var(--chat-error);
    color: white;
    width: 22px;
    height: 22px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 11px;
    font-weight: bold;
    border: 2px solid white;
  }
  
  .dark-mode .notification-badge {
    border-color: var(--chat-dark-bg);
  }
  
  .typing-indicator {
    display: flex;
    align-items: center;
    gap: 6px;
    padding: 12px 16px;
    background-color: var(--chat-bot-bubble);
    border-radius: 18px;
    align-self: flex-start;
    margin-bottom: 8px;
    width: fit-content;
  }
  
  .dark-mode .typing-indicator {
    background-color: #2d3748;
  }
  
  .typing-dot {
    width: 8px;
    height: 8px;
    background-color: var(--chat-light-text);
    border-radius: 50%;
    animation: typingAnimation 1.4s infinite ease-in-out;
  }
  
  .dark-mode .typing-dot {
    background-color: #a0aec0;
  }
  
  .typing-dot:nth-child(1) {
    animation-delay: 0s;
  }
  
  .typing-dot:nth-child(2) {
    animation-delay: 0.2s;
  }
  
  .typing-dot:nth-child(3) {
    animation-delay: 0.4s;
  }
  
  @keyframes typingAnimation {
    0%, 60%, 100% { transform: translateY(0); }
    30% { transform: translateY(-5px); }
  }
  
  .quick-replies {
    display: flex;
    flex-wrap: wrap;
    gap: 8px;
    margin-top: 12px;
  }
  
  .quick-reply {
    background-color: var(--chat-secondary);
    color: var(--chat-text);
    border: 1px solid var(--chat-border);
    border-radius: 16px;
    padding: 8px 14px;
    font-size: 13px;
    cursor: pointer;
    transition: all 0.2s;
  }
  
  .quick-reply:hover {
    background-color: var(--chat-primary);
    color: white;
    border-color: var(--chat-primary);
  }
  
  .dark-mode .quick-reply {
    background-color: #2d3748;
    color: var(--chat-dark-text);
    border-color: var(--chat-dark-border);
  }
  
  .voice-status {
    position: fixed;
    bottom: 90px;
    right: 24px;
    background-color: var(--chat-primary);
    color: white;
    padding: 12px 18px;
    border-radius: 24px;
    display: none;
    z-index: 10001;
    box-shadow: 0 6px 16px rgba(0,0,0,0.2);
    align-items: center;
    gap: 8px;
    font-size: 14px;
  }
  
  .voice-status i {
    animation: pulse 1.5s infinite;
  }
  
  .message-options {
    position: absolute;
    top: 8px;
    right: 8px;
    opacity: 0;
    transition: opacity 0.2s;
  }
  
  .chat-message:hover .message-options {
    opacity: 1;
  }
  
  .message-option-btn {
    background: none;
    border: none;
    color: inherit;
    cursor: pointer;
    padding: 4px;
    font-size: 12px;
    opacity: 0.7;
    transition: opacity 0.2s;
  }
  
  .message-option-btn:hover {
    opacity: 1;
  }
  
  .user-message .message-option-btn {
    color: rgba(255, 255, 255, 0.8);
  }
  
  .bot-message .message-option-btn {
    color: var(--chat-light-text);
  }
  
  .dark-mode .bot-message .message-option-btn {
    color: #a0aec0;
  }
  
  .suggested-questions {
    margin-top: 16px;
    padding-top: 12px;
    border-top: 1px dashed var(--chat-border);
  }
  
  .dark-mode .suggested-questions {
    border-color: var(--chat-dark-border);
  }
  
  .suggested-title {
    font-size: 12px;
    color: var(--chat-light-text);
    margin-bottom: 8px;
    font-weight: 500;
  }
  
  .dark-mode .suggested-title {
    color: #a0aec0;
  }
  
  .dark-mode-toggle {
    position: absolute;
    top: 16px;
    right: 60px;
    background: none;
    border: none;
    color: white;
    cursor: pointer;
    font-size: 16px;
    opacity: 0.8;
    transition: opacity 0.2s;
  }
  
  .dark-mode-toggle:hover {
    opacity: 1;
  }
  
  .chat-header-actions {
    display: flex;
    align-items: center;
    gap: 8px;
  }
  
  @media (max-width: 480px) {
    #chat-container {
      width: 100%;
      max-width: 100%;
      height: 100%;
      max-height: 100%;
      bottom: 0;
      right: 0;
      border-radius: 0;
    }
    
    #chat-toggle-btn {
      bottom: 20px;
      right: 20px;
    }
    
    .voice-status {
      bottom: 80px;
      right: 20px;
    }
  }
</style>

<!-- Chat Widget HTML -->
<div id='chat-container'>
  <div id='chat-header'>
    <div class='chat-header-info'>
      <i class='fas fa-robot'></i>
      <span>আক্তার মোল্লা</span>
      <div class='chat-status'>
        <span class='status-dot'></span>
        <span>অনলাইন</span>
      </div>
    </div>
    <div class='chat-header-actions'>
      <button class='dark-mode-toggle' id='dark-mode-toggle' title='ডার্ক মোড'>
        <i class='fas fa-moon'></i>
      </button>
      <button id='chat-close' title='বন্ধ করুন'><i class='fas fa-times'></i></button>
    </div>
  </div>
  
  <div id='chat-body'>
    <div class='welcome-message'>
      <!-- This will be dynamically updated based on time -->
    </div>
  </div>
  
  <div id='chat-footer'>
    <div class='chat-input-container'>
      <div class='voice-input-container'>
        <input id='chat-input' placeholder='আপনার বার্তা লিখুন...' type='text'/>
        <button id='voice-input-btn' title='ভয়েস ইনপুট'><i class='fas fa-microphone'></i></button>
      </div>
      <button id='chat-send' title='পাঠান'><i class='fas fa-paper-plane'></i></button>
    </div>
    
    <div class='chat-actions'>
      <button class='chat-action-btn' id='quick-questions-btn' title='দ্রুত প্রশ্ন'>
        <i class='fas fa-bolt'></i> দ্রুত প্রশ্ন
      </button>
      <button class='chat-action-btn' id='clear-chat-btn' title='চ্যাট পরিষ্কার করুন'>
        <i class='fas fa-trash-alt'></i> পরিষ্কার করুন
      </button>
      <button class='chat-action-btn' id='export-chat-btn' title='চ্যাট সংরক্ষণ করুন'>
        <i class='fas fa-download'></i> সংরক্ষণ
      </button>
    </div>
    
    <div class='chat-credits'>
      Powered by <a href="https://aktermolla.blogspot.com/" target="_blank">আক্তার মোল্লা</a>
    </div>
  </div>
  
  <div id='user-info-form'>
    <h3 class='form-title'>চ্যাট শুরু করুন</h3>
    <div class='form-group'>
      <label for='input-name' class='form-label'>আপনার নাম</label>
      <input id='input-name' class='form-input' placeholder='আপনার নাম লিখুন' type='text'/>
    </div>
    <div class='form-group'>
      <label for='input-email' class='form-label'>আপনার ইমেইল (ঐচ্ছিক)</label>
      <input id='input-email' class='form-input' placeholder='আপনার ইমেইল লিখুন' type='email'/>
    </div>
    <div class='form-buttons'>
      <button id='start-chat' class='form-btn btn-primary'>চ্যাট শুরু করুন</button>
      <button id='start-anonymous-chat' class='form-btn btn-secondary'>নামহীন চ্যাট</button>
    </div>
  </div>
</div>

<!-- Voice Status Indicator -->
<div class="voice-status" id="voice-status">
  <i class="fas fa-microphone"></i>
  <span>শুনছি...</span>
</div>

<!-- Toggle Button -->
<button id='chat-toggle-btn' title='চ্যাট খুলুন'>
  <i class='fas fa-comment-dots'></i>
  <span class='notification-badge' id='notification-badge' style='display:none'>0</span>
</button>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // DOM Elements
  const chatContainer = document.getElementById('chat-container');
  const chatBody = document.getElementById('chat-body');
  const chatInput = document.getElementById('chat-input');
  const chatSend = document.getElementById('chat-send');
  const toggleButton = document.getElementById('chat-toggle-btn');
  const chatClose = document.getElementById('chat-close');
  const userInfoForm = document.getElementById('user-info-form');
  const inputName = document.getElementById('input-name');
  const inputEmail = document.getElementById('input-email');
  const startChatButton = document.getElementById('start-chat');
  const startAnonymousChatButton = document.getElementById('start-anonymous-chat');
  const quickQuestionsBtn = document.getElementById('quick-questions-btn');
  const clearChatBtn = document.getElementById('clear-chat-btn');
  const exportChatBtn = document.getElementById('export-chat-btn');
  const notificationBadge = document.getElementById('notification-badge');
  const voiceInputBtn = document.getElementById('voice-input-btn');
  const voiceStatus = document.getElementById('voice-status');
  const welcomeMessage = document.querySelector('.welcome-message');
  const darkModeToggle = document.getElementById('dark-mode-toggle');
// Event delegation for quick replies
chatBody.addEventListener('click', (e) => {
  if (e.target.classList.contains('quick-reply')) {
    const question = e.target.textContent;
    sendMessage(question);
  }
});

  // State variables
  let userName = null;
  let userEmail = null;
  let isAnonymous = false;
  let isTyping = false;
  let unreadMessages = 0;
  let recognition;
  let isListening = false;
  let isDarkMode = false;
  const chatHistory = [];
  const posts = [];
  let messageQueue = [];
  let isProcessingQueue = false;

  // বাংলা দ্রুত প্রশ্ন
  const quickQuestions = [
    "আপনি কে?",
    "আপনার ব্লগে কি আছে?",
    "আপনার সাথে কিভাবে যোগাযোগ করব?",
    "আপনার দক্ষতা কী?",
    "আপনি কি ধরনের প্রজেক্ট করেন?",
    "ধন্যবাদ"
  ];

  // প্রি-ডিফাইন্ড রেস্পন্স
  const predefinedResponses = {
    "hello": "আসসালামু আলাইকুম! আমি আক্তার মোল্লা। কিভাবে আপনাকে সাহায্য করতে পারি?",
    "hi": "আসসালামু আলাইকুম! আমি আক্তার মোল্লা। কিভাবে আপনাকে সাহায্য করতে পারি?",
    "how are you": "আলহামদুলিল্লাহ, আমি ভালো আছি। আপনাকে কিভাবে সাহায্য করতে পারি?",
    "what is your name": "আমার নাম আক্তার মোল্লা। আমি একজন ব্লগার ও ওয়েব ডেভেলপার।",
    "bye": "আল্লাহ হাফেজ! আপনার দিন শুভ হোক।",
    "thanks": "আপনাকেও ধন্যবাদ। কোনো প্রশ্ন থাকলে জানাতে পারেন।",
    "thank you": "আপনাকেও ধন্যবাদ। কোনো প্রশ্ন থাকলে জানাতে পারেন।",
    "ধন্যবাদ": "আপনাকেও ধন্যবাদ। কোনো প্রশ্ন থাকলে জানাতে পারেন।",
    "আপনি কে": "আমি আক্তার মোল্লা, একজন ব্লগার ও ওয়েব ডেভেলপার। আমার ব্লগে প্রযুক্তি, ওয়েব ডেভেলপমেন্ট এবং দৈনন্দিন জীবনের নানা বিষয়ে লেখালেখি করি।",
    "আপনার ব্লগে কি আছে": "আমার ব্লগে আপনি পাবেন প্রযুক্তি, ওয়েব ডেভেলপমেন্ট, ব্লগিং টিপস এবং দৈনন্দিন জীবনের নানা বিষয়ক লেখা। <a href='https://aktermolla.blogspot.com' target='_blank'>এখানে ক্লিক করে ভিজিট করুন</a>।",
    "আপনার সাথে কিভাবে যোগাযোগ করব": "আমার সাথে ইমেইলের মাধ্যমে যোগাযোগ করতে পারেন: aktermolla@example.com। অথবা আমার <a href='https://facebook.com/aktermolla' target='_blank'>ফেসবুক প্রোফাইল</a> থেকে যোগাযোগ করতে পারেন।",
    "আপনার দক্ষতা কী": "আমার দক্ষতার মধ্যে রয়েছে ওয়েব ডেভেলপমেন্ট (HTML, CSS, JavaScript, PHP), ব্লগিং, কন্টেন্ট রাইটিং এবং ডিজিটাল মার্কেটিং।",
    "আপনি কি ধরনের প্রজেক্ট করেন": "আমি সাধারণত ওয়েবসাইট ডেভেলপমেন্ট, ব্লগ তৈরি, ওয়েব অ্যাপ্লিকেশন এবং ডিজিটাল মার্কেটিং সম্পর্কিত প্রজেক্ট করে থাকি।"
  };

  // Suggested questions after response
  const suggestedQuestions = {
    "default": [
      "আপনার ব্লগের লিংক দিন",
      "আপনার সাথে কিভাবে কাজ করব?",
      "আপনার সার্ভিসের দাম কত?"
    ],
    "blog": [
      "সর্বশেষ পোস্ট কোনটি?",
      "কোন বিষয়ে সবচেয়ে বেশি পোস্ট আছে?",
      "ব্লগে গেস্ট পোস্ট করতে পারব?"
    ]
  };

  // চ্যাট শুরু করুন
  function initChat() {
    setTimeBasedGreeting();
    fetchPosts();
    checkDarkModePreference();
    restoreChatState();
    initVoiceRecognition();
    setupEventListeners();
    setInterval(checkForUnreadMessages, 60000);
    setInterval(processMessageQueue, 100);
  }

  // সময়ভিত্তিক গ্রিটিং সেট করুন
  function setTimeBasedGreeting() {
    const hour = new Date().getHours();
    let greeting = "";
    
    if (hour < 12) {
      greeting = "সুপ্রভাত! সকালটা ভালো কাটুক।";
    } else if (hour < 16) {
      greeting = "শুভ অপরাহ্ন! দুপুরটা কেমন কাটছে?";
    } else if (hour < 20) {
      greeting = "শুভ সন্ধ্যা! বিকেলটা কেমন কাটছে?";
    } else {
      greeting = "শুভ রাত্রি! রাতটা ভালো কাটুক।";
    }
    
    if (welcomeMessage) {
      welcomeMessage.innerHTML = `
        <strong>${greeting}</strong> আমি আক্তার মোল্লা। কিভাবে আপনাকে সাহায্য করতে পারি? 
        চ্যাট শুরু করতে আপনার নাম প্রদান করুন অথবা নামহীন চ্যাট করতে 'নামহীন চ্যাট' বোতামে ক্লিক করুন।
        <div class="suggested-questions">
          <div class="suggested-title">দ্রুত জানুন:</div>
          <div class="quick-replies">
            ${quickQuestions.slice(0, 3).map(q => `<div class="quick-reply">${q}</div>`).join('')}
          </div>
        </div>
      `;
    }
  }

  // ভয়েস রিকগনিশন ইনিশিয়ালাইজ করুন
  function initVoiceRecognition() {
    try {
      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;
      if (!SpeechRecognition) {
        console.warn("Speech recognition not supported");
        voiceInputBtn.style.display = 'none';
        return;
      }
      
      recognition = new SpeechRecognition();
      recognition.continuous = false;
      recognition.interimResults = false;
      recognition.lang = 'bn-BD';
      
      recognition.onstart = function() {
        isListening = true;
        voiceInputBtn.classList.add('listening');
        voiceInputBtn.innerHTML = '<i class="fas fa-stop"></i>';
        voiceStatus.style.display = 'flex';
      };
      
      recognition.onresult = function(event) {
        const transcript = event.results[0][0].transcript;
        chatInput.value = transcript;
        voiceStatus.querySelector('span').textContent = 'শুনা সম্পন্ন হয়েছে';
        voiceInputBtn.innerHTML = '<i class="fas fa-microphone"></i>';
        
        setTimeout(() => {
          voiceStatus.style.display = 'none';
          sendMessage(transcript);
        }, 1000);
      };
      
      recognition.onerror = function(event) {
        console.error('Voice recognition error', event.error);
        voiceStatus.querySelector('span').textContent = 'ত্রুটি: ' + event.error;
        voiceInputBtn.innerHTML = '<i class="fas fa-microphone"></i>';
        setTimeout(() => voiceStatus.style.display = 'none', 2000);
      };
      
      recognition.onend = function() {
        isListening = false;
        voiceInputBtn.classList.remove('listening');
      };
    } catch (e) {
      console.error("Voice recognition initialization failed", e);
      voiceInputBtn.style.display = 'none';
    }
  }

  // ভয়েস ইনপুট টগল করুন
  function toggleVoiceInput() {
    if (!recognition) {
      showError("আপনার ব্রাউজার ভয়েস ইনপুট সাপোর্ট করে না");
      return;
    }
    
    if (isListening) {
      recognition.stop();
    } else {
      voiceStatus.querySelector('span').textContent = 'শুনছি... বলুন...';
      recognition.start();
    }
  }

  // ব্লগ পোস্ট ফেচ করুন - বাস্তব API কল সহ
  function fetchPosts() {
    // বাস্তব API এন্ডপয়েন্ট ব্যবহার করুন
    const apiUrl = 'https://aktermolla.blogspot.com/feeds/posts/default?alt=json';
    
    fetch(apiUrl)
      .then(response => {
        if (!response.ok) {
          throw new Error('Network response was not ok');
        }
        return response.json();
      })
      .then(data => {
        if (data.feed && data.feed.entry) {
          data.feed.entry.forEach(entry => {
            posts.push({
              title: entry.title.$t,
              link: entry.link.find(link => link.rel === 'alternate').href,
              content: entry.content.$t,
              categories: entry.category ? entry.category.map(category => category.term.toLowerCase()) : []
            });
          });
          console.log('Posts fetched successfully:', posts.length);
        } else {
          // যদি API থেকে ডাটা না আসে, ডেমো ডাটা ব্যবহার করুন
          loadDemoPosts();
        }
      })
      .catch(error => {
        console.error('Error fetching posts:', error);
        // API কল ফেইল হলে ডেমো ডাটা লোড করুন
        loadDemoPosts();
      });
  }

  // ডেমো পোস্ট লোড করুন (API কাজ না করলে)
  function loadDemoPosts() {
    const demoPosts = [
      {
        title: "ওয়েব ডেভেলপমেন্ট শেখার সম্পূর্ণ গাইড",
        link: "https://aktermolla.blogspot.com/web-dev-guide",
        content: "ওয়েব ডেভেলপমেন্ট শেখার জন্য সম্পূর্ণ গাইডলাইন। HTML, CSS, JavaScript থেকে শুরু করে Advanced JavaScript, React, Node.js পর্যন্ত সবকিছু।",
        categories: ["web development", "programming", "tutorial"]
      },
      {
        title: "ব্লগিং শুরু করার সম্পূর্ণ গাইড",
        link: "https://aktermolla.blogspot.com/blogging-guide",
        content: "কিভাবে একটি ব্লগ শুরু করবেন এবং সফল ব্লগার হবেন তার সম্পূর্ণ গাইড।",
        categories: ["blogging", "content writing", "tutorial"]
      },
      {
        title: "জাভাস্ক্রিপ্টের গুরুত্বপূর্ণ কনসেপ্ট",
        link: "https://aktermolla.blogspot.com/javascript-concepts",
        content: "জাভাস্ক্রিপ্টের কিছু গুরুত্বপূর্ণ কনসেপ্ট যা প্রতিটি ডেভেলপারের জানা উচিত।",
        categories: ["javascript", "programming"]
      }
    ];
    
    demoPosts.forEach(post => posts.push(post));
    console.log('Demo posts loaded:', posts.length);
  }
  // রেস্পন্স তৈরি করুন - উন্নত সংস্করণ
  function getResponse(userInput) {
    const inputLower = userInput.toLowerCase().trim();
    
    // 1. প্রথমে প্রি-ডিফাইন্ড রেস্পন্স চেক করুন
    for (const [question, answer] of Object.entries(predefinedResponses)) {
      if (inputLower.includes(question.toLowerCase())) {
        return { 
          answer, 
          type: question.toLowerCase(),
          suggestedQuestions: getSuggestedQuestions(question.toLowerCase())
        };
      }
    }
    
    // 2. ব্লগ পোস্টে সার্চ করুন
    const matchedPosts = searchInPosts(inputLower);
    if (matchedPosts.length > 0) {
      let response = 'আমার ব্লগে আপনি এই বিষয়ে নিম্নলিখিত পোস্টগুলো পেতে পারেন:<br><br>';
      matchedPosts.slice(0, 3).forEach((post, index) => {
        response += `${index + 1}. <a href="${post.link}" target="_blank">${post.title}</a><br>`;
      });
      
      if (matchedPosts.length > 3) {
        response += `<br>এবং আরও ${matchedPosts.length - 3} টি পোস্ট। <a href="https://aktermolla.blogspot.com/search?q=${encodeURIComponent(userInput)}" target="_blank">সমস্ত ফলাফল দেখুন</a>`;
      }
      
      return { 
        answer: response, 
        type: "blog",
        suggestedQuestions: suggestedQuestions.blog
      };
    }
    
    // 3. ডিফল্ট রেস্পন্স
    return { 
      answer: "দুঃখিত, আমি আপনার প্রশ্নের উত্তর খুঁজে পাইনি। আপনি অন্য ভাবে প্রশ্নটি করতে পারেন অথবা আমার <a href='https://aktermolla.blogspot.com' target='_blank'>ব্লগ</a> ভিজিট করতে পারেন।", 
      type: "default",
      suggestedQuestions: suggestedQuestions.default
    };
  }

  // ব্লগ পোস্টে সার্চ করুন
  function searchInPosts(query) {
    return posts.filter(post => {
      const titleMatch = post.title.toLowerCase().includes(query);
      const contentMatch = post.content.toLowerCase().includes(query);
      const categoryMatch = post.categories.some(cat => query.includes(cat));
      return titleMatch || contentMatch || categoryMatch;
    });
  }

  // প্রশ্নের ধরন অনুযায়ী সাজেস্টেড প্রশ্ন দিন
  function getSuggestedQuestions(type) {
    if (type.includes("blog") || type.includes("post")) {
      return suggestedQuestions.blog;
    } else if (type.includes("contact") || type.includes("যোগাযোগ")) {
      return [
        "আপনার ইমেইল কি?",
        "ফেসবুকে যোগাযোগ করতে পারব?",
        "ফোনে কথা বলতে পারব?"
      ];
    } else if (type.includes("service") || type.includes("সার্ভিস")) {
      return [
        "ওয়েবসাইট বানানোর দাম কত?",
        "ব্লগ সেটাপ করতে কত সময় লাগে?",
        "কোন পেমেন্ট মেথড নেন?"
      ];
    }
    return suggestedQuestions.default;
  }

  // মেসেজ পাঠান - আপডেটেড ভার্সন
  function sendMessage(message) {
    if (!message.trim()) return;
    
    const displayName = isAnonymous ? 'অতিথি' : userName;
    addMessage('user', `${displayName}: ${message}`);
    chatInput.value = '';
    chatSend.disabled = true;
    
    showTypingIndicator();
    
    setTimeout(() => {
      hideTypingIndicator();
      const { answer, type, suggestedQuestions } = getResponse(message);
      
      // সাজেস্টেড প্রশ্ন তৈরি করুন
const quickReplies = `
  <div class="suggested-questions">
    <div class="suggested-title">আরও জানুন:</div>
    <div class="quick-replies">
      ${suggestedQuestions.map(q => `<div class="quick-reply">${q}</div>`).join('')}
    </div>
  </div>
`;
      
      addMessage('bot', answer, { html: quickReplies });
      chatSend.disabled = false;
      
      if (chatContainer.style.display === 'none') {
        unreadMessages++;
        updateNotificationBadge();
      }
    }, 1000 + Math.random() * 2000);
  }

  // মেসেজ যোগ করুন (কিউ ব্যবস্থাপনা সহ)
 function addMessage(sender, message, options = {}) {
  const messageData = { sender, message, options };
  messageQueue.push(messageData);
  
  // If this is a bot message with quick replies, add them to a container
  if (sender === 'bot' && options.html) {
    const container = document.createElement('div');
    container.className = 'message-with-replies';
    container.innerHTML = options.html;
    messageData.options.html = container.innerHTML;
  }
}

  // মেসেজ কিউ প্রসেস করুন
  function processMessageQueue() {
    if (isProcessingQueue || messageQueue.length === 0) return;
    
    isProcessingQueue = true;
    const messageData = messageQueue.shift();
    const { sender, message, options } = messageData;
    
    const messageDiv = document.createElement('div');
    const timestamp = new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });
    let messageClass = '';
    let icon = '';
    
    if (sender === 'user') {
      messageClass = 'user-message';
      icon = '<i class="fas fa-user"></i>';
    } else if (sender === 'bot') {
      messageClass = 'bot-message';
      icon = '<i class="fas fa-robot"></i>';
    } else {
      messageClass = 'system-message';
    }
    
    messageDiv.className = `chat-message ${messageClass}`;
    
    if (sender !== 'system') {
      messageDiv.innerHTML = `
        <div class="message-content">
          <div>${icon} ${message}</div>
          <div class="message-time">${timestamp}</div>
        </div>
        <div class="message-options">
          <button class="message-option-btn" title="কপি করুন" onclick="copyToClipboard('${message.replace(/'/g, "\\'")}')">
            <i class="fas fa-copy"></i>
          </button>
        </div>
      `;
    } else {
      messageDiv.textContent = message;
    }
    
    if (options.html) {
      messageDiv.innerHTML += options.html;
    }
    
    chatBody.appendChild(messageDiv);
    chatBody.scrollTop = chatBody.scrollHeight;
    chatHistory.push({ sender, message, timestamp: new Date().toISOString() });
    saveChatState();
    
    if (sender === 'bot' && chatContainer.style.display === 'none') {
      unreadMessages++;
      updateNotificationBadge();
    }
    
    setTimeout(() => {
      isProcessingQueue = false;
    }, 100);
  }

  // ক্লিপবোর্ডে কপি করুন
  window.copyToClipboard = function(text) {
    navigator.clipboard.writeText(text).then(() => {
      showTemporaryMessage('কপি করা হয়েছে!', 'success');
    }).catch(err => {
      console.error('Could not copy text: ', err);
      showTemporaryMessage('কপি করতে ব্যর্থ!', 'error');
    });
  };

  // টাইপিং ইন্ডিকেটর দেখান
  function showTypingIndicator() {
    if (isTyping) return;
    isTyping = true;
    
    const typingDiv = document.createElement('div');
    typingDiv.className = 'typing-indicator';
    typingDiv.id = 'typing-indicator';
    typingDiv.innerHTML = `
      <div class="typing-dot"></div>
      <div class="typing-dot"></div>
      <div class="typing-dot"></div>
      <span>টাইপ করছেন...</span>
    `;
    
    chatBody.appendChild(typingDiv);
    chatBody.scrollTop = chatBody.scrollHeight;
  }

  // টাইপিং ইন্ডিকেটর লুকান
  function hideTypingIndicator() {
    isTyping = false;
    const typingIndicator = document.getElementById('typing-indicator');
    if (typingIndicator) {
      typingIndicator.remove();
    }
  }

  // রেস্পন্স তৈরি করুন
  function getResponse(userInput) {
    const inputLower = userInput.toLowerCase().trim();
    
    // Check predefined responses first
    for (const [question, answer] of Object.entries(predefinedResponses)) {
      if (inputLower.includes(question.toLowerCase())) {
        return { answer, type: question.toLowerCase() };
      }
    }
    
    // Search in blog posts
    const matchedPosts = posts.filter(post => {
      const titleMatch = post.title.toLowerCase().includes(inputLower);
      const contentMatch = post.content.toLowerCase().includes(inputLower);
      const categoryMatch = post.categories.some(cat => inputLower.includes(cat));
      return titleMatch || contentMatch || categoryMatch;
    });
    
    if (matchedPosts.length > 0) {
      let response = 'আমার ব্লগে আপনি এই বিষয়ে নিম্নলিখিত পোস্টগুলো পেতে পারেন:<br><br>';
      matchedPosts.slice(0, 3).forEach((post, index) => {
        response += `${index + 1}. <a href="${post.link}" target="_blank">${post.title}</a><br>`;
      });
      
      if (matchedPosts.length > 3) {
        response += `<br>এবং আরও ${matchedPosts.length - 3} টি পোস্ট। <a href="https://aktermolla.blogspot.com/search?q=${encodeURIComponent(userInput)}" target="_blank">সমস্ত ফলাফল দেখুন</a>`;
      }
      
      return { answer: response, type: "blog" };
    }
    
    return { 
      answer: "দুঃখিত, আমি আপনার প্রশ্নের উত্তর খুঁজে পাইনি। আপনি অন্য ভাবে প্রশ্নটি করতে পারেন অথবা আমার <a href='https://aktermolla.blogspot.com' target='_blank'>ব্লগ</a> ভিজিট করতে পারেন।", 
      type: "default" 
    };
  }

  // মেসেজ পাঠান
  function sendMessage(message) {
    if (!message.trim()) return;
    
    const displayName = isAnonymous ? 'অতিথি' : userName;
    addMessage('user', `${displayName}: ${message}`);
    chatInput.value = '';
    chatSend.disabled = true;
    
    showTypingIndicator();
    
    setTimeout(() => {
      hideTypingIndicator();
      const { answer, type } = getResponse(message);
      
      // Get suggested questions based on response type
      const suggestions = suggestedQuestions[type] || suggestedQuestions["default"];
      const quickReplies = `
        <div class="suggested-questions">
          <div class="suggested-title">আরও জানুন:</div>
          <div class="quick-replies">
            ${suggestions.map(q => `<div class="quick-reply">${q}</div>`).join('')}
          </div>
        </div>
      `;
      
      addMessage('bot', answer, { html: quickReplies });
      chatSend.disabled = false;
      
      if (chatContainer.style.display === 'none') {
        unreadMessages++;
        updateNotificationBadge();
      }
    }, 1000 + Math.random() * 2000);
  }

  // চ্যাট শুরু করুন (ব্যবহারকারী তথ্য সহ)
  function startChat() {
    userName = inputName.value.trim();
    userEmail = inputEmail.value.trim();
    
    if (!userName) {
      showError('দয়া করে আপনার নাম প্রদান করুন');
      return;
    }
    
    isAnonymous = false;
    userInfoForm.style.display = 'none';
    document.getElementById('chat-footer').style.display = 'flex';
    
    addMessage('system', `${userName} চ্যাটে যোগদান করেছেন`);
    addMessage('bot', `${userName}, আসসালামু আলাইকুম! আমি আক্তার মোল্লা। কিভাবে আপনাকে সাহায্য করতে পারি?`, {
      html: `<div class="quick-replies">${
        quickQuestions.map(q => `<div class="quick-reply">${q}</div>`).join('')
      }</div>`
    });
    
    saveToLocalStorage('chatUser', { name: userName, email: userEmail, isAnonymous: false });
    saveToLocalStorage('formSubmitted', true);
  }

  // নামহীন চ্যাট শুরু করুন
  function startAnonymousChat() {
    isAnonymous = true;
    userName = 'অতিথি';
    userEmail = null;
    userInfoForm.style.display = 'none';
    document.getElementById('chat-footer').style.display = 'flex';
    
    addMessage('system', 'একজন অতিথি চ্যাটে যোগদান করেছেন');
    addMessage('bot', 'আসসালামু আলাইকুম! আমি আক্তার মোল্লা। কিভাবে আপনাকে সাহায্য করতে পারি?', {
      html: `<div class="quick-replies">${
        quickQuestions.map(q => `<div class="quick-reply">${q}</div>`).join('')
      }</div>`
    });
    
    saveToLocalStorage('chatUser', { name: 'Anonymous', email: null, isAnonymous: true });
    saveToLocalStorage('formSubmitted', true);
  }

  // এরর মেসেজ দেখান
  function showError(message) {
    const errorDiv = document.createElement('div');
    errorDiv.className = 'system-message';
    errorDiv.style.color = 'var(--chat-error)';
    errorDiv.innerHTML = `<i class="fas fa-exclamation-circle"></i> ${message}`;
    chatBody.appendChild(errorDiv);
    chatBody.scrollTop = chatBody.scrollHeight;
  }

  // সাময়িক মেসেজ দেখান (সাফল্য/ত্রুটি)
  function showTemporaryMessage(message, type = 'success') {
    const tempDiv = document.createElement('div');
    tempDiv.className = 'system-message';
    tempDiv.style.color = type === 'success' ? 'var(--chat-success)' : 'var(--chat-error)';
    tempDiv.innerHTML = `<i class="fas fa-${type === 'success' ? 'check-circle' : 'exclamation-circle'}"></i> ${message}`;
    chatBody.appendChild(tempDiv);
    chatBody.scrollTop = chatBody.scrollHeight;
    
    setTimeout(() => {
      tempDiv.remove();
    }, 3000);
  }

  // চ্যাট টগল করুন
  function toggleChat() {
    if (chatContainer.style.display === 'none' || chatContainer.style.display === '') {
      chatContainer.style.display = 'flex';
      unreadMessages = 0;
      updateNotificationBadge();
    } else {
      chatContainer.style.display = 'none';
    }
  }

  // নোটিফিকেশন ব্যাজ আপডেট করুন
  function updateNotificationBadge() {
    if (unreadMessages > 0) {
      notificationBadge.style.display = 'flex';
      notificationBadge.textContent = unreadMessages > 9 ? '9+' : unreadMessages;
    } else {
      notificationBadge.style.display = 'none';
    }
  }

  // চ্যাট হিস্টোরি ক্লিয়ার করুন
  function clearChat() {
    chatBody.innerHTML = '';
    addMessage('bot', 'চ্যাট ইতিহাস পরিষ্কার করা হয়েছে। কিভাবে আপনাকে সাহায্য করতে পারি?', {
      html: `<div class="quick-replies">${
        quickQuestions.map(q => `<div class="quick-reply">${q}</div>`).join('')
      }</div>`
    });
    localStorage.removeItem('chatHistory');
  }

  // চ্যাট এক্সপোর্ট করুন
  function exportChat() {
    let chatText = 'আক্তার মোল্লা - চ্যাট ইতিহাস\n\n';
    chatHistory.forEach(msg => {
      const sender = msg.sender === 'user' ? (isAnonymous ? 'অতিথি' : userName) : 'আক্তার মোল্লা';
      chatText += `${sender}: ${msg.message}\n\n`;
    });
    
    const blob = new Blob([chatText], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `আক্তার-মোল্লা-চ্যাট-${new Date().toISOString().slice(0, 10)}.txt`;
    a.click();
    URL.revokeObjectURL(url);
    
    showTemporaryMessage('চ্যাট ইতিহাস ডাউনলোড করা হয়েছে!', 'success');
  }

  // দ্রুত প্রশ্ন দেখান
function showQuickQuestions() {
  // Remove any existing quick questions to avoid duplicates
  const existingQuickQuestions = document.querySelectorAll('.quick-replies-container');
  existingQuickQuestions.forEach(el => el.remove());
  
  const quickRepliesDiv = document.createElement('div');
  quickRepliesDiv.className = 'quick-replies-container';
  quickRepliesDiv.innerHTML = `
    <div class="suggested-questions">
      <div class="suggested-title">দ্রুত প্রশ্ন নির্বাচন করুন:</div>
      <div class="quick-replies">
        ${quickQuestions.map(q => `<div class="quick-reply" data-question="${q}">${q}</div>`).join('')}
      </div>
    </div>
  `;
  
  // Add the quick replies to the chat
  addMessage('bot', 'দ্রুত প্রশ্ন নির্বাচন করুন:', { html: quickRepliesDiv.innerHTML });
  
  // Add event listeners to the new quick reply buttons
  setTimeout(() => {
    document.querySelectorAll('.quick-reply').forEach(button => {
      button.addEventListener('click', function() {
        const question = this.getAttribute('data-question');
        sendMessage(question);
      });
    });
  }, 100);
}

  // ডার্ক মোড চেক করুন
  function checkDarkModePreference() {
    const savedMode = getFromLocalStorage('darkMode');
    if (savedMode !== null) {
      isDarkMode = savedMode;
    } else {
      isDarkMode = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;
    }
    toggleDarkMode(isDarkMode);
  }

  // ডার্ক মোড টগল করুন
  function toggleDarkMode(enable) {
    isDarkMode = enable;
    if (enable) {
      document.documentElement.classList.add('dark-mode');
      darkModeToggle.innerHTML = '<i class="fas fa-sun"></i>';
      darkModeToggle.title = 'লাইট মোড';
    } else {
      document.documentElement.classList.remove('dark-mode');
      darkModeToggle.innerHTML = '<i class="fas fa-moon"></i>';
      darkModeToggle.title = 'ডার্ক মোড';
    }
    saveToLocalStorage('darkMode', enable);
  }

  // লোকাল স্টোরেজে সেভ করুন
  function saveToLocalStorage(key, value) {
    try {
      localStorage.setItem(key, JSON.stringify(value));
    } catch (e) {
      console.error('LocalStorage error:', e);
    }
  }

  // লোকাল স্টোরেজ থেকে ডেটা নিন
  function getFromLocalStorage(key) {
    try {
      const data = localStorage.getItem(key);
      return data ? JSON.parse(data) : null;
    } catch (e) {
      console.error('LocalStorage error:', e);
      return null;
    }
  }

  // চ্যাট স্টেট সেভ করুন
  function saveChatState() {
    saveToLocalStorage('chatHistory', chatHistory);
  }

  // চ্যাট স্টেট রিস্টোর করুন
  function restoreChatState() {
    const formSubmitted = getFromLocalStorage('formSubmitted');
    const savedUser = getFromLocalStorage('chatUser');
    const savedHistory = getFromLocalStorage('chatHistory');
    
    if (formSubmitted && savedUser) {
      userName = savedUser.name;
      userEmail = savedUser.email;
      isAnonymous = savedUser.isAnonymous;
      userInfoForm.style.display = 'none';
      document.getElementById('chat-footer').style.display = 'flex';
      
      if (savedHistory && savedHistory.length > 0) {
        const recentHistory = savedHistory.slice(-20); // Load last 20 messages
        recentHistory.forEach(msg => {
          addMessage(msg.sender, msg.message);
        });
      } else {
        const welcomeMsg = isAnonymous ? 
          'আসসালামু আলাইকুম! আবারও আপনাকে স্বাগতম। কিভাবে আপনাকে সাহায্য করতে পারি?' : 
          `${userName}, আবারও আপনাকে স্বাগতম! কিভাবে আপনাকে সাহায্য করতে পারি?`;
        
        addMessage('bot', welcomeMsg, {
          html: `<div class="quick-replies">${
            quickQuestions.map(q => `<div class="quick-reply">${q}</div>`).join('')
          }</div>`
        });
      }
    }
  }

  // আনরিড মেসেজ চেক করুন
  function checkForUnreadMessages() {
    if (chatContainer.style.display === 'none' && Math.random() > 0.7) {
      unreadMessages++;
      updateNotificationBadge();
      
      if ('Notification' in window && Notification.permission === 'granted') {
        new Notification('আক্তার মোল্লা', {
          body: 'আপনার জন্য একটি নতুন বার্তা আছে',
          icon: 'https://via.placeholder.com/64/4f46e5/FFFFFF?text=AM'
        });
      }
    }
  }

  // নোটিফিকেশন পারমিশন রিকোয়েস্ট করুন
  function requestNotificationPermission() {
    if ('Notification' in window && Notification.permission !== 'denied') {
      Notification.requestPermission().then(permission => {
        if (permission === 'granted') {
          new Notification('আক্তার মোল্লা', {
            body: 'চ্যাট সহকারীতে আপনাকে স্বাগতম!',
            icon: 'https://via.placeholder.com/64/4f46e5/FFFFFF?text=AM'
          });
        }
      });
    }
  }

  // ইভেন্ট লিস্টেনার সেটআপ করুন
  function setupEventListeners() {
    // টগল বাটন
    toggleButton.addEventListener('click', function(e) {
      e.stopPropagation();
      toggleChat();
    });
    
    // ক্লোজ বাটন
    chatClose.addEventListener('click', () => {
      chatContainer.style.display = 'none';
    });
    
    // সেন্ড বাটন
    chatSend.addEventListener('click', () => {
      sendMessage(chatInput.value);
    });
    
    // এন্টার কী প্রেস
    chatInput.addEventListener('keypress', (e) => {
      if (e.key === 'Enter' && !isListening) {
        sendMessage(chatInput.value);
      }
    });
    
    // ইনপুট পরিবর্তন
    chatInput.addEventListener('input', () => {
      chatSend.disabled = chatInput.value.trim() === '';
    });
    
    // চ্যাট শুরু বাটন
    startChatButton.addEventListener('click', startChat);
    
    // নামহীন চ্যাট বাটন
    startAnonymousChatButton.addEventListener('click', startAnonymousChat);
    
    // দ্রুত প্রশ্ন বাটন
    quickQuestionsBtn.addEventListener('click', showQuickQuestions);
    
    // ক্লিয়ার চ্যাট বাটন
    clearChatBtn.addEventListener('click', clearChat);
    
    // এক্সপোর্ট চ্যাট বাটন
    exportChatBtn.addEventListener('click', exportChat);
    
    // ভয়েস ইনপুট বাটন
    voiceInputBtn.addEventListener('click', toggleVoiceInput);
    
    // ডার্ক মোড টগল
    darkModeToggle.addEventListener('click', () => {
      toggleDarkMode(!isDarkMode);
    });
    
    // নোটিফিকেশন পারমিশন
    document.addEventListener('click', requestNotificationPermission, { once: true });
    
    // উইন্ডো রিসাইজ
    window.addEventListener('resize', () => {
      if (window.innerWidth < 480) {
        chatContainer.style.width = '100%';
        chatContainer.style.maxWidth = '100%';
        chatContainer.style.borderRadius = '0';
      } else {
        chatContainer.style.width = '380px';
        chatContainer.style.maxWidth = '380px';
        chatContainer.style.borderRadius = '16px';
      }
    });
  }

  // চ্যাট ইনিশিয়ালাইজ করুন
  initChat();
});
</script>
